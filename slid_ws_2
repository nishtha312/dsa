https://www.geeksforgeeks.org/problems/count-distinct-elements-in-every-window/1?page=1&category=sliding-window&sortBy=submissions
 left , right = 0,0
    count = 0
    ans=[]
    n = len(arr)
    while right < n:
        if right - left + 1 == k:

            ws = arr[left:right+1]
            count = len(set(ws))
            ans.append(count)
            left += 1
        right += 1


    return ans

https://leetcode.com/problems/maximum-average-subarray-i/
class Solution:
    def findMaxAverage(self, nums: List[int], k: int) -> float:
        curr = maxsum = sum(nums[:k])
        for i in range(k,len(nums)):
            curr += nums[i] - nums[i-k]
            maxsum=max(maxsum,curr)
        return maxsum/k
        
